What is Big O Notation:
Big O notation describes the upper bound of an algorithm's running time or space complexity in terms of input size n.

Notation	Meaning	           Example
O(1)	        Constant time	   HashMap lookup
O(n)	        Linear time	   Linear Search
O(log n)	Logarithmic time   Binary Search
O(n²)	        Quadratic time	   Nested loops

Best, Average, and Worst Case (for searching):
Scenario	Linear Search	Binary Search (sorted array)
Best Case	O(1) (item at start)	O(1) (item at middle)
Average Case	O(n/2) → O(n)	O(log n)
Worst Case	O(n) (not found)	O(log n)


Analysis and Comparison
Time Complexity
Algorithm	Time Complexity
Linear Search	O(n)
Binary Search	O(log n)

Which is better?
-Linear Search: works on unsorted data. Slower for large datasets.
-Binary Search: faster, but requires sorted array.

Conclusion:
-Use Binary Search for fast lookups if product list is sorted by productName.
-For small datasets or dynamic inserts (unsorted), Linear Search is simpler.

